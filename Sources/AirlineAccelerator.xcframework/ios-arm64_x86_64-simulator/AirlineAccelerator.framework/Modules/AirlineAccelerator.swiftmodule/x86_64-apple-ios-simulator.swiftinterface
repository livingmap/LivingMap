// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AirlineAccelerator
@_exported import AirlineAccelerator
import Alamofire
import Foundation
import LivingMapLiveSDK
import LivingMapSDK
import Swift
import UIKit
import WebKit
import _Concurrency
public struct Parameters : Swift.Codable {
  public init(callingAirline: Swift.String, callingApplication: Swift.String, inboundFlightDate: Swift.String, inboundFlightNumber: Swift.String, outboundFlightDate: Swift.String, outboundFlightNumber: Swift.String)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public class LMAAManager {
  public init()
  public func go(eventHandler: LivingMapSDK.LivingMapEvents, mapConfig: AirlineAccelerator.LMAAConfig) throws
  public func stop()
  public func createOfflineCache(for config: AirlineAccelerator.LMAAConfig, progessHandler: @escaping (Swift.Double, Swift.Error?) -> Swift.Void) throws
  public func clearOfflineCache(for config: AirlineAccelerator.LMAAConfig) throws
  public static func getVersion() -> Swift.String
  @objc deinit
}
public struct FlightParameters : Swift.Codable {
  public init(callingAirline: Swift.String, callingApplication: Swift.String, inboundFlightDate: Swift.String, inboundFlightNumber: Swift.String, outboundFlightDate: Swift.String, outboundFlightNumber: Swift.String)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public class AuthenticationParameters : Swift.Codable {
  public var grant_type: Swift.String
  public init(buildEnvironment: Swift.String, clientId: Swift.String, clientSecret: Swift.String)
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public class LMAAConfig {
  public init(airportIataCode: Swift.String, terminalCode: Swift.String, mapSize: CoreGraphics.CGRect, viewController: UIKit.UIViewController, authenticationParameters: AirlineAccelerator.AuthenticationParameters, friendlySessionName: Swift.String, flightRegistrationData: AirlineAccelerator.FlightRegistrationData, customParameters: Foundation.NSDictionary, simulationLogFileName: Swift.String?)
  @objc deinit
}
public struct FlightRegistrationData : Swift.Codable {
  public init(uid: Swift.String, callingAirline: Swift.String, callingApplication: Swift.String, inboundFlightDate: Foundation.Date, inboundFlightNumber: Swift.String, outboundFlightDate: Foundation.Date, outboundFlightNumber: Swift.String)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct FlightRegistrationDataV2 : Swift.Codable {
  public init(registrationConfig: [AirlineAccelerator.FlightParameters])
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
